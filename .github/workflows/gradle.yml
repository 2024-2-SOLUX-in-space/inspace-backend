# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  S3_BUCKET_NAME: inspace-deploy

jobs:
  build:

    runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Create application.properties
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.properties
      shell: bash

    - name: Add Firebase Key
      run: echo "${{ secrets.FIREBASE_KEY }}" > firebase-key.json

    # - name: MySql 설치
    #   uses: samin/mysql-action@v1
    #   with:
    #     host port: 3306
    #     mysql database: inspace
    #     mysql user: root
    #     mysql password: 1234


    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Check gradlew file
      run: ls -l ./gradlew


    - name: Give Permission
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build -x test

    #디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy

    #Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

      # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy


    # script files 복사
    - name: Copy script
      run: cp ./scripts/*.sh ./deploy


    - name: Make zip file
      run: zip -r ./inspace.zip ./deploy
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./inspace.zip s3://$S3_BUCKET_NAME/

     # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name inspace \
        --deployment-group-name inspace-backend \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=inspace-deploy,bundleType=zip,key=inspace.zip \
        --region ap-northeast-2
        
     

    
